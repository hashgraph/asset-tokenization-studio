/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../../common";

export declare namespace ScheduledTasksLib {
  export type ScheduledTaskStruct = {
    scheduledTimestamp: BigNumberish;
    data: BytesLike;
  };

  export type ScheduledTaskStructOutput = [BigNumber, string] & {
    scheduledTimestamp: BigNumber;
    data: string;
  };
}

export interface IScheduledBalanceAdjustmentsInterface extends utils.Interface {
  functions: {
    "getScheduledBalanceAdjustments(uint256,uint256)": FunctionFragment;
    "onScheduledBalanceAdjustmentTriggered(uint256,uint256,bytes)": FunctionFragment;
    "scheduledBalanceAdjustmentCount()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getScheduledBalanceAdjustments"
      | "onScheduledBalanceAdjustmentTriggered"
      | "scheduledBalanceAdjustmentCount"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getScheduledBalanceAdjustments",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "onScheduledBalanceAdjustmentTriggered",
    values: [BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "scheduledBalanceAdjustmentCount",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getScheduledBalanceAdjustments",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onScheduledBalanceAdjustmentTriggered",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "scheduledBalanceAdjustmentCount",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IScheduledBalanceAdjustments extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IScheduledBalanceAdjustmentsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getScheduledBalanceAdjustments(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [ScheduledTasksLib.ScheduledTaskStructOutput[]] & {
        scheduledBalanceAdjustment_: ScheduledTasksLib.ScheduledTaskStructOutput[];
      }
    >;

    onScheduledBalanceAdjustmentTriggered(
      _pos: BigNumberish,
      _scheduledTasksLength: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    scheduledBalanceAdjustmentCount(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  getScheduledBalanceAdjustments(
    _pageIndex: BigNumberish,
    _pageLength: BigNumberish,
    overrides?: CallOverrides
  ): Promise<ScheduledTasksLib.ScheduledTaskStructOutput[]>;

  onScheduledBalanceAdjustmentTriggered(
    _pos: BigNumberish,
    _scheduledTasksLength: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  scheduledBalanceAdjustmentCount(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    getScheduledBalanceAdjustments(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<ScheduledTasksLib.ScheduledTaskStructOutput[]>;

    onScheduledBalanceAdjustmentTriggered(
      _pos: BigNumberish,
      _scheduledTasksLength: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    scheduledBalanceAdjustmentCount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getScheduledBalanceAdjustments(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onScheduledBalanceAdjustmentTriggered(
      _pos: BigNumberish,
      _scheduledTasksLength: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    scheduledBalanceAdjustmentCount(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getScheduledBalanceAdjustments(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onScheduledBalanceAdjustmentTriggered(
      _pos: BigNumberish,
      _scheduledTasksLength: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    scheduledBalanceAdjustmentCount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
