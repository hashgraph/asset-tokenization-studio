/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../../common";

export declare namespace TRexIDiamondLoupe {
  export type FacetStruct = {
    id: BytesLike;
    addr: string;
    selectors: BytesLike[];
    interfaceIds: BytesLike[];
  };

  export type FacetStructOutput = [string, string, string[], string[]] & {
    id: string;
    addr: string;
    selectors: string[];
    interfaceIds: string[];
  };
}

export interface TRexIDiamondLoupeInterface extends utils.Interface {
  functions: {
    "getFacet(bytes32)": FunctionFragment;
    "getFacetAddress(bytes4)": FunctionFragment;
    "getFacetAddresses()": FunctionFragment;
    "getFacetAddressesByPage(uint256,uint256)": FunctionFragment;
    "getFacetIdBySelector(bytes4)": FunctionFragment;
    "getFacetIds()": FunctionFragment;
    "getFacetIdsByPage(uint256,uint256)": FunctionFragment;
    "getFacetSelectors(bytes32)": FunctionFragment;
    "getFacetSelectorsByPage(bytes32,uint256,uint256)": FunctionFragment;
    "getFacetSelectorsLength(bytes32)": FunctionFragment;
    "getFacets()": FunctionFragment;
    "getFacetsByPage(uint256,uint256)": FunctionFragment;
    "getFacetsLength()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getFacet"
      | "getFacetAddress"
      | "getFacetAddresses"
      | "getFacetAddressesByPage"
      | "getFacetIdBySelector"
      | "getFacetIds"
      | "getFacetIdsByPage"
      | "getFacetSelectors"
      | "getFacetSelectorsByPage"
      | "getFacetSelectorsLength"
      | "getFacets"
      | "getFacetsByPage"
      | "getFacetsLength"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "getFacet", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "getFacetAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetAddresses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetAddressesByPage",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetIdBySelector",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetIds",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetIdsByPage",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetSelectors",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetSelectorsByPage",
    values: [BytesLike, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetSelectorsLength",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "getFacets", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getFacetsByPage",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getFacetsLength",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "getFacet", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFacetAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetAddressesByPage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetIdBySelector",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetIdsByPage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetSelectors",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetSelectorsByPage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetSelectorsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFacets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFacetsByPage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFacetsLength",
    data: BytesLike
  ): Result;

  events: {};
}

export interface TRexIDiamondLoupe extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TRexIDiamondLoupeInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getFacet(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [TRexIDiamondLoupe.FacetStructOutput] & {
        facet_: TRexIDiamondLoupe.FacetStructOutput;
      }
    >;

    getFacetAddress(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { facetAddress_: string }>;

    getFacetAddresses(
      overrides?: CallOverrides
    ): Promise<[string[]] & { facetAddresses_: string[] }>;

    getFacetAddressesByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]] & { facetAddresses_: string[] }>;

    getFacetIdBySelector(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { facetId_: string }>;

    getFacetIds(
      overrides?: CallOverrides
    ): Promise<[string[]] & { facetIds_: string[] }>;

    getFacetIdsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]] & { facetIds_: string[] }>;

    getFacetSelectors(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string[]] & { facetSelectors_: string[] }>;

    getFacetSelectorsByPage(
      _facetId: BytesLike,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]] & { facetSelectors_: string[] }>;

    getFacetSelectorsLength(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { facetSelectorsLength_: BigNumber }>;

    getFacets(
      overrides?: CallOverrides
    ): Promise<
      [TRexIDiamondLoupe.FacetStructOutput[]] & {
        facets_: TRexIDiamondLoupe.FacetStructOutput[];
      }
    >;

    getFacetsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [TRexIDiamondLoupe.FacetStructOutput[]] & {
        facets_: TRexIDiamondLoupe.FacetStructOutput[];
      }
    >;

    getFacetsLength(
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { facetsLength_: BigNumber }>;
  };

  getFacet(
    _facetId: BytesLike,
    overrides?: CallOverrides
  ): Promise<TRexIDiamondLoupe.FacetStructOutput>;

  getFacetAddress(
    _selector: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getFacetAddresses(overrides?: CallOverrides): Promise<string[]>;

  getFacetAddressesByPage(
    _pageIndex: BigNumberish,
    _pageLength: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getFacetIdBySelector(
    _selector: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getFacetIds(overrides?: CallOverrides): Promise<string[]>;

  getFacetIdsByPage(
    _pageIndex: BigNumberish,
    _pageLength: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getFacetSelectors(
    _facetId: BytesLike,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getFacetSelectorsByPage(
    _facetId: BytesLike,
    _pageIndex: BigNumberish,
    _pageLength: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getFacetSelectorsLength(
    _facetId: BytesLike,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getFacets(
    overrides?: CallOverrides
  ): Promise<TRexIDiamondLoupe.FacetStructOutput[]>;

  getFacetsByPage(
    _pageIndex: BigNumberish,
    _pageLength: BigNumberish,
    overrides?: CallOverrides
  ): Promise<TRexIDiamondLoupe.FacetStructOutput[]>;

  getFacetsLength(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    getFacet(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<TRexIDiamondLoupe.FacetStructOutput>;

    getFacetAddress(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getFacetAddresses(overrides?: CallOverrides): Promise<string[]>;

    getFacetAddressesByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getFacetIdBySelector(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getFacetIds(overrides?: CallOverrides): Promise<string[]>;

    getFacetIdsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getFacetSelectors(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getFacetSelectorsByPage(
      _facetId: BytesLike,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getFacetSelectorsLength(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacets(
      overrides?: CallOverrides
    ): Promise<TRexIDiamondLoupe.FacetStructOutput[]>;

    getFacetsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<TRexIDiamondLoupe.FacetStructOutput[]>;

    getFacetsLength(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getFacet(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetAddress(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetAddresses(overrides?: CallOverrides): Promise<BigNumber>;

    getFacetAddressesByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetIdBySelector(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetIds(overrides?: CallOverrides): Promise<BigNumber>;

    getFacetIdsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetSelectors(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetSelectorsByPage(
      _facetId: BytesLike,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetSelectorsLength(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacets(overrides?: CallOverrides): Promise<BigNumber>;

    getFacetsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getFacetsLength(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getFacet(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetAddress(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetAddresses(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFacetAddressesByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetIdBySelector(
      _selector: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetIds(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFacetIdsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetSelectors(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetSelectorsByPage(
      _facetId: BytesLike,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetSelectorsLength(
      _facetId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFacetsByPage(
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFacetsLength(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
