/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export declare namespace IClearing {
  export type ClearingOperationStruct = {
    partition: BytesLike;
    expirationTimestamp: BigNumberish;
    data: BytesLike;
  };

  export type ClearingOperationStructOutput = [string, BigNumber, string] & {
    partition: string;
    expirationTimestamp: BigNumber;
    data: string;
  };

  export type ClearingOperationFromStruct = {
    clearingOperation: IClearing.ClearingOperationStruct;
    from: string;
    operatorData: BytesLike;
  };

  export type ClearingOperationFromStructOutput = [
    IClearing.ClearingOperationStructOutput,
    string,
    string
  ] & {
    clearingOperation: IClearing.ClearingOperationStructOutput;
    from: string;
    operatorData: string;
  };

  export type ClearingTransferDataStruct = {
    amount: BigNumberish;
    expirationTimestamp: BigNumberish;
    destination: string;
    data: BytesLike;
    operatorData: BytesLike;
    operatorType: BigNumberish;
  };

  export type ClearingTransferDataStructOutput = [
    BigNumber,
    BigNumber,
    string,
    string,
    string,
    number
  ] & {
    amount: BigNumber;
    expirationTimestamp: BigNumber;
    destination: string;
    data: string;
    operatorData: string;
    operatorType: number;
  };

  export type ProtectedClearingOperationStruct = {
    clearingOperation: IClearing.ClearingOperationStruct;
    from: string;
    deadline: BigNumberish;
    nonce: BigNumberish;
  };

  export type ProtectedClearingOperationStructOutput = [
    IClearing.ClearingOperationStructOutput,
    string,
    BigNumber,
    BigNumber
  ] & {
    clearingOperation: IClearing.ClearingOperationStructOutput;
    from: string;
    deadline: BigNumber;
    nonce: BigNumber;
  };
}

export interface IClearingTransferInterface extends utils.Interface {
  functions: {
    "clearingTransferByPartition((bytes32,uint256,bytes),uint256,address)": FunctionFragment;
    "clearingTransferFromByPartition(((bytes32,uint256,bytes),address,bytes),uint256,address)": FunctionFragment;
    "getClearingTransferForByPartition(bytes32,address,uint256)": FunctionFragment;
    "operatorClearingTransferByPartition(((bytes32,uint256,bytes),address,bytes),uint256,address)": FunctionFragment;
    "protectedClearingTransferByPartition(((bytes32,uint256,bytes),address,uint256,uint256),uint256,address,bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "clearingTransferByPartition"
      | "clearingTransferFromByPartition"
      | "getClearingTransferForByPartition"
      | "operatorClearingTransferByPartition"
      | "protectedClearingTransferByPartition"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "clearingTransferByPartition",
    values: [IClearing.ClearingOperationStruct, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "clearingTransferFromByPartition",
    values: [IClearing.ClearingOperationFromStruct, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getClearingTransferForByPartition",
    values: [BytesLike, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "operatorClearingTransferByPartition",
    values: [IClearing.ClearingOperationFromStruct, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "protectedClearingTransferByPartition",
    values: [
      IClearing.ProtectedClearingOperationStruct,
      BigNumberish,
      string,
      BytesLike
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "clearingTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "clearingTransferFromByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getClearingTransferForByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "operatorClearingTransferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "protectedClearingTransferByPartition",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IClearingTransfer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IClearingTransferInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    clearingTransferByPartition(
      _clearingOperation: IClearing.ClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    clearingTransferFromByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getClearingTransferForByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _clearingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [IClearing.ClearingTransferDataStructOutput] & {
        clearingTransferData_: IClearing.ClearingTransferDataStructOutput;
      }
    >;

    operatorClearingTransferByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    protectedClearingTransferByPartition(
      _protectedClearingOperation: IClearing.ProtectedClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  clearingTransferByPartition(
    _clearingOperation: IClearing.ClearingOperationStruct,
    _amount: BigNumberish,
    _to: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  clearingTransferFromByPartition(
    _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
    _amount: BigNumberish,
    _to: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getClearingTransferForByPartition(
    _partition: BytesLike,
    _tokenHolder: string,
    _clearingId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<IClearing.ClearingTransferDataStructOutput>;

  operatorClearingTransferByPartition(
    _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
    _amount: BigNumberish,
    _to: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  protectedClearingTransferByPartition(
    _protectedClearingOperation: IClearing.ProtectedClearingOperationStruct,
    _amount: BigNumberish,
    _to: string,
    _signature: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    clearingTransferByPartition(
      _clearingOperation: IClearing.ClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber] & { success_: boolean; clearingId_: BigNumber }
    >;

    clearingTransferFromByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber] & { success_: boolean; clearingId_: BigNumber }
    >;

    getClearingTransferForByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _clearingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<IClearing.ClearingTransferDataStructOutput>;

    operatorClearingTransferByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber] & { success_: boolean; clearingId_: BigNumber }
    >;

    protectedClearingTransferByPartition(
      _protectedClearingOperation: IClearing.ProtectedClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      _signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber] & { success_: boolean; clearingId_: BigNumber }
    >;
  };

  filters: {};

  estimateGas: {
    clearingTransferByPartition(
      _clearingOperation: IClearing.ClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    clearingTransferFromByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getClearingTransferForByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _clearingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    operatorClearingTransferByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    protectedClearingTransferByPartition(
      _protectedClearingOperation: IClearing.ProtectedClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    clearingTransferByPartition(
      _clearingOperation: IClearing.ClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    clearingTransferFromByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getClearingTransferForByPartition(
      _partition: BytesLike,
      _tokenHolder: string,
      _clearingId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    operatorClearingTransferByPartition(
      _clearingOperationFrom: IClearing.ClearingOperationFromStruct,
      _amount: BigNumberish,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    protectedClearingTransferByPartition(
      _protectedClearingOperation: IClearing.ProtectedClearingOperationStruct,
      _amount: BigNumberish,
      _to: string,
      _signature: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
