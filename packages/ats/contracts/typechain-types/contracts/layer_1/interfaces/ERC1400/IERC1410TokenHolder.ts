/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export type BasicTransferInfoStruct = { to: string; value: BigNumberish };

export type BasicTransferInfoStructOutput = [string, BigNumber] & {
  to: string;
  value: BigNumber;
};

export interface IERC1410TokenHolderInterface extends utils.Interface {
  functions: {
    "authorizeOperator(address)": FunctionFragment;
    "authorizeOperatorByPartition(bytes32,address)": FunctionFragment;
    "redeemByPartition(bytes32,uint256,bytes)": FunctionFragment;
    "revokeOperator(address)": FunctionFragment;
    "revokeOperatorByPartition(bytes32,address)": FunctionFragment;
    "transferByPartition(bytes32,(address,uint256),bytes)": FunctionFragment;
    "triggerAndSyncAll(bytes32,address,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "authorizeOperator"
      | "authorizeOperatorByPartition"
      | "redeemByPartition"
      | "revokeOperator"
      | "revokeOperatorByPartition"
      | "transferByPartition"
      | "triggerAndSyncAll"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "authorizeOperator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "authorizeOperatorByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemByPartition",
    values: [BytesLike, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeOperator",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeOperatorByPartition",
    values: [BytesLike, string]
  ): string;
  encodeFunctionData(
    functionFragment: "transferByPartition",
    values: [BytesLike, BasicTransferInfoStruct, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "triggerAndSyncAll",
    values: [BytesLike, string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "authorizeOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "authorizeOperatorByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revokeOperatorByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferByPartition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "triggerAndSyncAll",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IERC1410TokenHolder extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IERC1410TokenHolderInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    authorizeOperator(
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    transferByPartition(
      _partition: BytesLike,
      _basicTransferInfo: BasicTransferInfoStruct,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    triggerAndSyncAll(
      _partition: BytesLike,
      _from: string,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  authorizeOperator(
    _operator: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  authorizeOperatorByPartition(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  redeemByPartition(
    _partition: BytesLike,
    _value: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  revokeOperator(
    _operator: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  revokeOperatorByPartition(
    _partition: BytesLike,
    _operator: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  transferByPartition(
    _partition: BytesLike,
    _basicTransferInfo: BasicTransferInfoStruct,
    _data: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  triggerAndSyncAll(
    _partition: BytesLike,
    _from: string,
    _to: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    authorizeOperator(
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    revokeOperator(_operator: string, overrides?: CallOverrides): Promise<void>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: CallOverrides
    ): Promise<void>;

    transferByPartition(
      _partition: BytesLike,
      _basicTransferInfo: BasicTransferInfoStruct,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    triggerAndSyncAll(
      _partition: BytesLike,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    authorizeOperator(
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    transferByPartition(
      _partition: BytesLike,
      _basicTransferInfo: BasicTransferInfoStruct,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    triggerAndSyncAll(
      _partition: BytesLike,
      _from: string,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    authorizeOperator(
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    authorizeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    redeemByPartition(
      _partition: BytesLike,
      _value: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    revokeOperator(
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    revokeOperatorByPartition(
      _partition: BytesLike,
      _operator: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    transferByPartition(
      _partition: BytesLike,
      _basicTransferInfo: BasicTransferInfoStruct,
      _data: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    triggerAndSyncAll(
      _partition: BytesLike,
      _from: string,
      _to: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
