/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../../../common";

export declare namespace IKyc {
  export type KycDataStruct = {
    validFrom: BigNumberish;
    validTo: BigNumberish;
    vcId: string;
    issuer: string;
    status: BigNumberish;
  };

  export type KycDataStructOutput = [
    BigNumber,
    BigNumber,
    string,
    string,
    number
  ] & {
    validFrom: BigNumber;
    validTo: BigNumber;
    vcId: string;
    issuer: string;
    status: number;
  };
}

export interface IKycInterface extends utils.Interface {
  functions: {
    "activateInternalKyc()": FunctionFragment;
    "deactivateInternalKyc()": FunctionFragment;
    "getKycAccountsCount(uint8)": FunctionFragment;
    "getKycAccountsData(uint8,uint256,uint256)": FunctionFragment;
    "getKycFor(address)": FunctionFragment;
    "getKycStatusFor(address)": FunctionFragment;
    "grantKyc(address,string,uint256,uint256,address)": FunctionFragment;
    "initializeInternalKyc(bool)": FunctionFragment;
    "isInternalKycActivated()": FunctionFragment;
    "revokeKyc(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "activateInternalKyc"
      | "deactivateInternalKyc"
      | "getKycAccountsCount"
      | "getKycAccountsData"
      | "getKycFor"
      | "getKycStatusFor"
      | "grantKyc"
      | "initializeInternalKyc"
      | "isInternalKycActivated"
      | "revokeKyc"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "activateInternalKyc",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "deactivateInternalKyc",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getKycAccountsCount",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getKycAccountsData",
    values: [BigNumberish, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "getKycFor", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getKycStatusFor",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "grantKyc",
    values: [string, string, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "initializeInternalKyc",
    values: [boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "isInternalKycActivated",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "revokeKyc", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "activateInternalKyc",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deactivateInternalKyc",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getKycAccountsCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getKycAccountsData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getKycFor", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getKycStatusFor",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantKyc", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initializeInternalKyc",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isInternalKycActivated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeKyc", data: BytesLike): Result;

  events: {
    "InternalKycStatusUpdated(address,bool)": EventFragment;
    "KycGranted(address,address)": EventFragment;
    "KycRevoked(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "InternalKycStatusUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "KycGranted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "KycRevoked"): EventFragment;
}

export interface InternalKycStatusUpdatedEventObject {
  operator: string;
  activated: boolean;
}
export type InternalKycStatusUpdatedEvent = TypedEvent<
  [string, boolean],
  InternalKycStatusUpdatedEventObject
>;

export type InternalKycStatusUpdatedEventFilter =
  TypedEventFilter<InternalKycStatusUpdatedEvent>;

export interface KycGrantedEventObject {
  account: string;
  issuer: string;
}
export type KycGrantedEvent = TypedEvent<
  [string, string],
  KycGrantedEventObject
>;

export type KycGrantedEventFilter = TypedEventFilter<KycGrantedEvent>;

export interface KycRevokedEventObject {
  account: string;
  issuer: string;
}
export type KycRevokedEvent = TypedEvent<
  [string, string],
  KycRevokedEventObject
>;

export type KycRevokedEventFilter = TypedEventFilter<KycRevokedEvent>;

export interface IKyc extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IKycInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    activateInternalKyc(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    deactivateInternalKyc(
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getKycAccountsCount(
      _kycStatus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { kycAccountsCount_: BigNumber }>;

    getKycAccountsData(
      _kycStatus: BigNumberish,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string[], IKyc.KycDataStructOutput[]] & {
        accounts_: string[];
        kycData_: IKyc.KycDataStructOutput[];
      }
    >;

    getKycFor(
      _account: string,
      overrides?: CallOverrides
    ): Promise<[IKyc.KycDataStructOutput] & { kyc_: IKyc.KycDataStructOutput }>;

    getKycStatusFor(
      _account: string,
      overrides?: CallOverrides
    ): Promise<[number] & { kycStatus_: number }>;

    grantKyc(
      _account: string,
      _vcId: string,
      _validFrom: BigNumberish,
      _validTo: BigNumberish,
      _issuer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    initializeInternalKyc(
      _activateInternalKyc: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    isInternalKycActivated(overrides?: CallOverrides): Promise<[boolean]>;

    revokeKyc(
      _account: string,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  activateInternalKyc(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  deactivateInternalKyc(
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getKycAccountsCount(
    _kycStatus: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getKycAccountsData(
    _kycStatus: BigNumberish,
    _pageIndex: BigNumberish,
    _pageLength: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [string[], IKyc.KycDataStructOutput[]] & {
      accounts_: string[];
      kycData_: IKyc.KycDataStructOutput[];
    }
  >;

  getKycFor(
    _account: string,
    overrides?: CallOverrides
  ): Promise<IKyc.KycDataStructOutput>;

  getKycStatusFor(_account: string, overrides?: CallOverrides): Promise<number>;

  grantKyc(
    _account: string,
    _vcId: string,
    _validFrom: BigNumberish,
    _validTo: BigNumberish,
    _issuer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  initializeInternalKyc(
    _activateInternalKyc: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  isInternalKycActivated(overrides?: CallOverrides): Promise<boolean>;

  revokeKyc(
    _account: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    activateInternalKyc(overrides?: CallOverrides): Promise<boolean>;

    deactivateInternalKyc(overrides?: CallOverrides): Promise<boolean>;

    getKycAccountsCount(
      _kycStatus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getKycAccountsData(
      _kycStatus: BigNumberish,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [string[], IKyc.KycDataStructOutput[]] & {
        accounts_: string[];
        kycData_: IKyc.KycDataStructOutput[];
      }
    >;

    getKycFor(
      _account: string,
      overrides?: CallOverrides
    ): Promise<IKyc.KycDataStructOutput>;

    getKycStatusFor(
      _account: string,
      overrides?: CallOverrides
    ): Promise<number>;

    grantKyc(
      _account: string,
      _vcId: string,
      _validFrom: BigNumberish,
      _validTo: BigNumberish,
      _issuer: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initializeInternalKyc(
      _activateInternalKyc: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    isInternalKycActivated(overrides?: CallOverrides): Promise<boolean>;

    revokeKyc(_account: string, overrides?: CallOverrides): Promise<boolean>;
  };

  filters: {
    "InternalKycStatusUpdated(address,bool)"(
      operator?: string | null,
      activated?: null
    ): InternalKycStatusUpdatedEventFilter;
    InternalKycStatusUpdated(
      operator?: string | null,
      activated?: null
    ): InternalKycStatusUpdatedEventFilter;

    "KycGranted(address,address)"(
      account?: string | null,
      issuer?: string | null
    ): KycGrantedEventFilter;
    KycGranted(
      account?: string | null,
      issuer?: string | null
    ): KycGrantedEventFilter;

    "KycRevoked(address,address)"(
      account?: string | null,
      issuer?: string | null
    ): KycRevokedEventFilter;
    KycRevoked(
      account?: string | null,
      issuer?: string | null
    ): KycRevokedEventFilter;
  };

  estimateGas: {
    activateInternalKyc(
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    deactivateInternalKyc(
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getKycAccountsCount(
      _kycStatus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getKycAccountsData(
      _kycStatus: BigNumberish,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getKycFor(_account: string, overrides?: CallOverrides): Promise<BigNumber>;

    getKycStatusFor(
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    grantKyc(
      _account: string,
      _vcId: string,
      _validFrom: BigNumberish,
      _validTo: BigNumberish,
      _issuer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    initializeInternalKyc(
      _activateInternalKyc: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    isInternalKycActivated(overrides?: CallOverrides): Promise<BigNumber>;

    revokeKyc(
      _account: string,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    activateInternalKyc(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    deactivateInternalKyc(
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getKycAccountsCount(
      _kycStatus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getKycAccountsData(
      _kycStatus: BigNumberish,
      _pageIndex: BigNumberish,
      _pageLength: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getKycFor(
      _account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getKycStatusFor(
      _account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    grantKyc(
      _account: string,
      _vcId: string,
      _validFrom: BigNumberish,
      _validTo: BigNumberish,
      _issuer: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    initializeInternalKyc(
      _activateInternalKyc: boolean,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    isInternalKycActivated(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    revokeKyc(
      _account: string,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
